<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Django | Ringo Cheung]]></title>
  <link href="http://ringfather.github.io/blog/categories/django/atom.xml" rel="self"/>
  <link href="http://ringfather.github.io/"/>
  <updated>2014-12-22T18:39:02-05:00</updated>
  <id>http://ringfather.github.io/</id>
  <author>
    <name><![CDATA[Ringo Cheung]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Expen$e: My First Web App]]></title>
    <link href="http://ringfather.github.io/blog/2014/08/14/expenSe-my-first-web-app/"/>
    <updated>2014-08-14T22:22:52-04:00</updated>
    <id>http://ringfather.github.io/blog/2014/08/14/expenSe-my-first-web-app</id>
    <content type="html"><![CDATA[<p>Project deployed at: <a href="http://ringocheung.pythonanywhere.com/ExpenSe/">Expen$e</a><br/>
Check out the code on Github <a href="https://github.com/ringocheung/ExpenSe ">here</a></p>

<p>The idea for <a href="http://ringocheung.pythonanywhere.com/ExpenSe/">Expen$e</a> came from a conversation with a friend about how difficult it is to record expenses with traditional apps. We quickly agreed on the annoyance of having to perform more than 2 actions to record an expense. It made no sense to me that an expense tracking app did not allow for easy expense tracking. As a user, I want to be able to record expenses as easily as possible. This desire drove two key design decisions: macros and single box input.</p>

<p>Macros are not anything new. They are typically used as shortcuts &ndash; in this case a letter replaces an expense name. Instead of having to type in &lsquo;utilities&rsquo;, Expen$e allows you to set the &lsquo;u&rsquo; macro to utilities and then type in &lsquo;u&rsquo; instead.</p>

<!--more-->


<p>To further optimize the recording process, only one input box is used &ndash; with no delimiters. This design decision makes it even easier to record and expense, instead of having to type &lsquo;u&rsquo; and &lsquo;15&rsquo; in separate boxes or even &lsquo;u/15&rsquo; in one box, Expen$e allows the user to type in &lsquo;u15&rsquo; in one box and it will recognize that the user is trying to record a utilities expense of $15. Descriptions are also supported in the following format: &lsquo;u15Electricity bill for the month of October&rsquo;. This meant a regex (always fun) in the decoding engine but the added simplicity for the user was in my opinion a good tradeoff.</p>

<p>The rest of the application is a pretty standard CRUD app, allowing users to set a recurring monthly budget and displaying how much is remaining/used out of that budget.</p>

<p>Lessons learned:<br/>
1. Web apps are really fun to build &ndash; Self-explanatory :)<br/>
2. The 80/20 rule is real &ndash; The last 20% of the app took 80% of the time. Well, that&rsquo;s an exaggeration but you get my point: It was a lot harder to implement &lsquo;details&rsquo; than it was to get the app working.<br/>
3. Make code as modular as you can &ndash; package related functions into modules, always try to build part by part and test your parts before putting them into the big machine. I was taught this in school but never realized how true it was until I actually needed to debug my app&hellip;<br/>
4. Use a file to log your progress and plan the application &ndash; This helped me a lot because I would sit down to work and already know what I needed to do instead of waste time thinking about what feature to implement every time.<br/>
5. Keep photos of progress and write the blog post AS I&rsquo;m doing the project, not after.</p>

<p>Biggest challenge: getting started.<br/>
Honestly had a tough time committing to this project. I was pretty tired after work every, getting home at 6:30 and wanting to just relax. You can even see from my github commits I was committing only once or twice a week for the first few weeks. However, once I started building more and more, I wanted to build more and more and put this thing together so I could use it (selfish, I know). By overcoming this challenge and actually completing this project, I feel like every other project I start will be easier because I know I&rsquo;ve completed one before and actually had a lot of fun.</p>

<p>Big thanks to the <a href="http://www.tangowithdjango.com/">tango with django tutorial</a> and <a href="http://www.pythonanywhere.com">Python Anywhere&rsquo;s hosting service</a>. Extremely helpful for building your first Django webapp.</p>
]]></content>
  </entry>
  
</feed>
