<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Career | Ringo Cheung]]></title>
  <link href="http://ringfather.github.io/blog/categories/career/atom.xml" rel="self"/>
  <link href="http://ringfather.github.io/"/>
  <updated>2015-01-07T14:14:59-05:00</updated>
  <id>http://ringfather.github.io/</id>
  <author>
    <name><![CDATA[Ringo Cheung]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Reflection]]></title>
    <link href="http://ringfather.github.io/blog/2014/12/22/reflection/"/>
    <updated>2014-12-22T17:24:34-05:00</updated>
    <id>http://ringfather.github.io/blog/2014/12/22/reflection</id>
    <content type="html"><![CDATA[<p>In this post, I&rsquo;ll be doing a reflection of the last four months of my life (2F EngSci). Specifically, I want to focus on how I dramatically changed my attitude towards education and how it&rsquo;s paid off, as well as how I was able to land a summer internship at Microsoft in software engineering. Hopefully, the lessons I&rsquo;ve learned in the last four months will help you achieve whatever goals you&rsquo;re working for.</p>

<!--more-->


<p>Let&rsquo;s start with school. Before this school year began, I had already decided that the attitude I had last year was toxic &ndash; caring more about my grades than understanding the material. That in itself could be an entire blog post, but I&rsquo;ll focus instead on how I changed that attitude and the results I saw from it.</p>

<p>First off, I resolved to maintain a positive attitude towards learning this year. I strongly believe in the idea that if you keep telling yourself something, you will believe it. I am hardly the first person to do this, there are way better stories of people who have endured great hardship by maintaining a positive attitude. The thing that I told myself was: I&rsquo;m not going to worry about my grades, but I will try to truly understand everything that I am being taught. Obviously, this is a tall order, having been conditioned my entire life to get good grades so that I could get into a good university and get a good job. However, I think I held to it quite reasonably, and I have enjoyed school so much more. My evidence for this is that I attended 95%+ of my lectures and tutorials, as opposed to last school year when I attended about 70%, and I was very happy doing it.</p>

<p>I credit my attitude shift for really dramatically changing my outlook on life. I also found that school is magnitudes less stressful when I focussed on learning for understanding instead of for marks. Some other little things that I tried this semester that had a positive impact were working a little every day instead of cramming, and exercising consistently throughout the semester. Something that I tried that was a little more unconventional was living without wifi this last semester. The only form of internet I had at home was my 6 GB of mobile data. I was actually quite happy with this decision even though some people find it appalling. To those people, I would like to say that wifi is not &ldquo;mythic&rdquo; &ndash; it is possible to live without 100+ GB of data. And having less internet forces you to waste less of it on Youtube and other extraneous websurfing. I will return to school in 2W with the same 6GB of internet per month.</p>

<p>Next I will talk about finding a job. To me, getting a job is a two-step process. The first step is getting in the door &ndash; getting an interview &ndash; while the second step is convincing the company that you should be hired. In regards to the first step, always talk to a recruiter face-to-face in addition to applying online. Out of the 6 companies that I pitched to, 3 of them interviewed me. This is in contrast to the 9 companies that I applied to online, all of which either rejected me or did not respond to me. This suggest to me empirically that pitching to recruiters face-to-face is better. This leads me into my second lesson &ndash; pitching. I tried something unconventional that worked: I went around career fairs and events with my app opened on my tablet and started my conversation with recruiters talking about the app. This in addition to my decent understanding of resume theory &ndash; check out &ldquo;The Google Resume&rdquo;, I learned most of my resume knowledge there &ndash; were what got me into the door. My resume is on the blog for those that want to take a look at it.</p>

<p>For the second step, I recommend for those looking at software positions (but to be honest any position will be similar because you should have to problem solve) to practice problem solving. Engineering students are fortunate here because they hone their problem solving skills in their day to day studies. Regardless, you should be practicing for your interviews. I put in around 40 hours preparing for interviews this semester. Not only did it help me land a job, but it also renewed my passion for problem solving. Another important note is that it is not about getting the correct answer in interviews. At my final round interviews for Microsoft, I did not answer all the questions correctly (to be honest, I answered embarrassingly few of them correctly), but I was stil able to land the job because I really focussed on communicating my problem solving process clearly, and articulating my passion for software engineering and problem solving. I recommend the book &ldquo;Cracking the Coding Interview&rdquo; for practicing for software interviews &ndash; it certainly worked for me.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Working as a Developer for RBC Capital Markets]]></title>
    <link href="http://ringfather.github.io/blog/2014/08/30/working-as-a-developer-for-rbc-capital-markets/"/>
    <updated>2014-08-30T08:39:25-04:00</updated>
    <id>http://ringfather.github.io/blog/2014/08/30/working-as-a-developer-for-rbc-capital-markets</id>
    <content type="html"><![CDATA[<p>A little over three months ago, I was fortunate enough to land a software development position at RBC Capital Markets. Yesterday was my last day, and I woke up this morning feeling a little nostalgic, so I decided to write this post to share my experience working as a software developer for RBC.</p>

<p>So what did I do in my three months? Well, here&rsquo;s the summary of duties and work performed that I put on my Practical Experience Form (PER) &ndash; a mandatory experience requirement that engineering students have to complete before graduating:</p>

<!--more-->


<ol>
<li>Applied TDD techniques to develop testing utility that is currently being used for over 80 business reports, directly identifying a critical bug before production release</li>
<li>Utilized OOP techniques to implement functional enhancements to web application used by entire team of 40+, which included designing SQL Server database tables, implementing an ORM and application logic, and designing a UI, automating 250+ tasks and directly reducing the time required to complete one of these tasks by 90%  on average</li>
<li>Built a data extraction utility to generate 1000+ pages of database documentation, directly facilitating data mapping tasks of a team of 4</li>
<li>Created and presented software enhancements proposal to two team leads resulting in approval to make enhancements to existing application</li>
</ol>


<p>A quick list of the tools and techniques I used include:</p>

<p>Visual Studio 2008 &amp; 2010, Microsoft SSRS, SSIS &amp; SSMS, API&rsquo;s (including Atlassian&rsquo;s Confluence and Microsoft SSRS), SQL Server, Test Driven Development, Unit Testing, Python, Object Oriented Programming, Subversion, Continuous Integration Tool (Jenkins)</p>

<p>If you&rsquo;ll notice, I actually did a lot of programming for RBC, for which I count myself extremely lucky. It was extremely satisfying to build the testing utility, and then see it run several times a day through our continuous integration testing tool and actually help us identify bugs in our reports. Similarly, creating and presenting a software enhancement proposal and then actually working on the enhancements and delivering a usable product during my term was extremely awesome.</p>

<p>Here are a few things I learned in the last three months:</p>

<ul>
<li>Your internship can be as good or bad as you make it. I remember there were some days where I wasn&rsquo;t assigned much work, but I went out of my way to bug my supervisor to give me more. This attitude of wanting to contribute definitely helped me get bigger projects to work on.</li>
<li>Ask people for help! I remember I was pretty intimidated by all the senior developer towards the beginning, but they were all actually very nice and willing to help. Some even went out of their way to help me out!</li>
<li>At the same time, try to figure things out on your own before asking for help. No one likes that co-op who asks trivial questions and wastes everyone&rsquo;s time. Google + Stack Overflow can answer 90%+ of your software problems. For the remaining 10%&ndash;, ask away.</li>
<li>Design your code. There are many ways to write a program, but I learned that picking which way is important. For instance, you probably want to use objects most of the time and modularize your code. You also want to write unit tests, lots of unit tests.</li>
<li>Version control is extremely important. Commit all your work, and make sure it passes the build tests before you go home for the day.</li>
</ul>


<p>All in all, I count my experience as very positive &ndash; I was given a chance to use what I learned in school to build solutions, and learned a ton about a field that I am considering for my career. I want to thank everyone who helped me during my time at RBC if they ever read this, and those who helped me get the job, you know who you are. This has definitely been one of my better summers (2012 was pretty awesome as well), and I look forward to the next one.</p>
]]></content>
  </entry>
  
</feed>
